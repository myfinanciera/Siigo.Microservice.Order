// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	order "siigo.com/order/src/domain/order"

	uuid "dev.azure.com/SiigoDevOps/Siigo/_git/go-cqrs.git/cqrs/uuid"
)

// IOrderFinder is an autogenerated mock type for the IOrderFinder type
type IOrderFinder struct {
	mock.Mock
}

// Get provides a mock function with given fields: id
func (_m *IOrderFinder) Get(id uuid.UUID) chan *order.OrderResponse {
	ret := _m.Called(id)

	var r0 chan *order.OrderResponse
	if rf, ok := ret.Get(0).(func(uuid.UUID) chan *order.OrderResponse); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan *order.OrderResponse)
		}
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *IOrderFinder) GetAll() chan order.OrdersResponse {
	ret := _m.Called()

	var r0 chan order.OrdersResponse
	if rf, ok := ret.Get(0).(func() chan order.OrdersResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan order.OrdersResponse)
		}
	}

	return r0
}

type mockConstructorTestingTNewIOrderFinder interface {
	mock.TestingT
	Cleanup(func())
}

// NewIOrderFinder creates a new instance of IOrderFinder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIOrderFinder(t mockConstructorTestingTNewIOrderFinder) *IOrderFinder {
	mock := &IOrderFinder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
