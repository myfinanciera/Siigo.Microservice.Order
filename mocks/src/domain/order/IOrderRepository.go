// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	order "siigo.com/order/src/domain/order"
)

// IOrderRepository is an autogenerated mock type for the IOrderRepository type
type IOrderRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: _a0
func (_m *IOrderRepository) Delete(_a0 *order.Order) chan error {
	ret := _m.Called(_a0)

	var r0 chan error
	if rf, ok := ret.Get(0).(func(*order.Order) chan error); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan error)
		}
	}

	return r0
}

// Save provides a mock function with given fields: _a0
func (_m *IOrderRepository) Save(_a0 *order.Order) chan error {
	ret := _m.Called(_a0)

	var r0 chan error
	if rf, ok := ret.Get(0).(func(*order.Order) chan error); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan error)
		}
	}

	return r0
}

// Update provides a mock function with given fields: _a0
func (_m *IOrderRepository) Update(_a0 *order.Order) chan error {
	ret := _m.Called(_a0)

	var r0 chan error
	if rf, ok := ret.Get(0).(func(*order.Order) chan error); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan error)
		}
	}

	return r0
}

type mockConstructorTestingTNewIOrderRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIOrderRepository creates a new instance of IOrderRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIOrderRepository(t mockConstructorTestingTNewIOrderRepository) *IOrderRepository {
	mock := &IOrderRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
